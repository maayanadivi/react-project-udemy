{"version":3,"sources":["Card.js","element/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Card","nextProps","nextState","console","log","prevProps","prevState","message","snapshot","className","src","this","props","avatar","alt","style","width","name","title","type","onChange","onChangeName","value","onClick","onDelete","children","state","Component","Button","styled","button","color","css","length","theme","primary","mango","App","toggleShowCard","setState","showCard","deleteCardHandler","cardIndex","cards_copy","cards","splice","changeNameHandler","event","id","findIndex","card","target","classes","push","cardsMarKup","map","index","join","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7f114a1.chunk.js","sourcesContent":["import React,{Component} from 'react'\r\nimport './App.css';\r\n\r\nclass Card extends Component {\r\n    static getDerivedStateFromProps(props,state){\r\n        console.log('card js getDerivedStateFromProps')\r\n        return state\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        console.log('card js shouldComponentUpdate')\r\n        return false\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps,prevState){\r\n        console.log('card js getSnapshotBeforeUpdate')\r\n        return {message: 'some snapshot'}\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n        console.log('card js componentDidUpdate',snapshot)\r\n    }\r\n\r\n    render(){\r\n\r\n        console.log('card js rendering')\r\n        return (\r\n            <div className=\"card\">\r\n                <img src={this.props.avatar} alt=\"Avatar\" style={{ width: '100%' }} />\r\n                <div className=\"container\">\r\n                    <h4><b>{this.props.name}</b></h4>\r\n                    <p>{this.props.title}</p>\r\n                    <input type=\"text\" onChange={this.props.onChangeName} value={this.props.name}/>\r\n                    <p><button className=\"button button-red\" onClick={this.props.onDelete}>Delete</button></p>\r\n                    <div>{this.props.children}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Card\r\n","import styled,{css} from \"styled-components\"\r\n\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  ${props=>\r\n    props.color && css`\r\n    background-color: ${props=>props.length>2? props.theme[props.color]: props.length<2? 'red':'pink'};\r\n    color: ${props=>props.length<=1?'white':'black'};\r\n    `\r\n  }\r\n  font-weight: ${props=>props.length<=1?'bold':'normal'};\r\n  padding: 15px 32px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n`\r\n\r\nexport default Button","import React, {  Component} from 'react';\r\nimport './App.css';\r\nimport Card from './Card';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport Button from './element/Button';\r\n\r\n\r\nconst theme = {\r\n  primary: '#4CAF50',\r\n  mango:'yellow'\r\n}\r\n\r\nclass App extends Component {\r\n  \r\n  constructor(props){\r\n    console.log('app js constructor')\r\n    super(props)\r\n    this.state={\r\n      cards:[\r\n        {\r\n          \r\n          id:'123',\r\n          name: 'Yoni',\r\n          title: 'International Operations Producer',\r\n          avatar:'https://avatars.githubusercontent.com/u/73611785?v=4'\r\n        },\r\n        {\r\n          id:'456',\r\n          name: 'Bar',\r\n          title: 'Future Security Developer',\r\n          avatar:'https://avatars.githubusercontent.com/u/73593736?v=4'\r\n        },\r\n        {\r\n          id:'789',\r\n          name: 'Coral',\r\n          title: 'Forward Metrics AnalystChange Name',\r\n          avatar:'https://avatars.githubusercontent.com/u/73594029?v=4'\r\n        }\r\n      ],\r\n      showCard:true\r\n    }\r\n  }\r\n\r\n\r\n  static getDerivedStateFromProps(props,state){\r\n    console.log('App js getDerivedStateFromProps',props)\r\n    return state\r\n  }\r\n  toggleShowCard = () => this.setState({showCard:!this.state.showCard})\r\n  deleteCardHandler = (cardIndex)=>{\r\n    const cards_copy = [...this.state.cards]\r\n    cards_copy.splice(cardIndex,1)\r\n    this.setState({cards:cards_copy})\r\n  }\r\n  changeNameHandler= (event,id) => {\r\n    //1. which card\r\n    const cardIndex= this.state.cards.findIndex(card=>card.id === id)\r\n    //2.make a copy of the cards\r\n    const cards_copy = [...this.state.cards]\r\n    //3. change the name of the specific card\r\n    cards_copy[cardIndex].name=event.target.value\r\n    //4. set the cards with the latest version of the card copy\r\n    this.setState({cards:cards_copy})\r\n    \r\n  }\r\n  componentDidMount(){\r\n    console.log('app js componentdidmount')\r\n  }\r\n  \r\n  render(){\r\n    if(this.state.showCard===false){\r\n      return<div>nothing</div>\r\n    }\r\n    console.log('App js render')\r\n    const classes = ['button']\r\n    if(this.state.cards.length<3) classes.push('pink');\r\n    if(this.state.cards.length<2) classes.push('red text');\r\n    const cardsMarKup = this.state.showCard &&(\r\n      this.state.cards.map((card,index)=><Card \r\n        avatar={card.avatar}\r\n        name={card.name} \r\n        title={card.title}\r\n        key={card.id}\r\n        onDelete={() => this.deleteCardHandler(index)}\r\n        onChangeName = {(event)=>this.changeNameHandler(event,card.id)}\r\n    />))\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n      <Button color=\"mango\" length={this.state.cards.length} onClick={this.toggleShowCard}>Toggle</Button>\r\n        <button className={classes.join(' ')} onClick={this.toggleShowCard}>Show/Hide</button>\r\n        {cardsMarKup} \r\n      </div></ThemeProvider>\r\n      \r\n    );\r\n  }\r\n    \r\n  \r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}